// <auto-generated />
using System;
using CardGeneratorBackend.Config;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CardGeneratorBackend.Migrations
{
    [DbContext(typeof(CardDatabaseContext))]
    [Migration("20250620053423_TypeImageFile")]
    partial class TypeImageFile
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CardGeneratorBackend.Entities.CardType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("BackgroundColorHexCode1")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bg_color_hex_code_1");

                    b.Property<string>("BackgroundColorHexCode2")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bg_color_hex_code_2");

                    b.Property<Guid?>("ImageFileId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("TextColor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text_color");

                    b.HasKey("Id");

                    b.HasIndex("ImageFileId");

                    b.ToTable("card_types");
                });

            modelBuilder.Entity("CardGeneratorBackend.Entities.TrackedFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("path");

                    b.Property<string>("StorageLocation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("storage_location");

                    b.HasKey("Id");

                    b.ToTable("tracked_files");
                });

            modelBuilder.Entity("CardGeneratorBackend.Entities.CardType", b =>
                {
                    b.HasOne("CardGeneratorBackend.Entities.TrackedFile", "ImageFile")
                        .WithMany()
                        .HasForeignKey("ImageFileId");

                    b.Navigation("ImageFile");
                });
#pragma warning restore 612, 618
        }
    }
}
